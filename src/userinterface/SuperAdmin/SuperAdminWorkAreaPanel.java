/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SuperAdmin;

import Business.Enterprise.Enterprise;
import Business.Stakeholders.PatientsDirectory;
//import Business.Stakeholders.specimen_directory;
import java.awt.CardLayout;
import javax.swing.JPanel;
import userinterface.AdministrativeRole.ManageEmployeeJPanel;
import userinterface.AdministrativeRole.ManageOrganizationJPanel;
import userinterface.AdministrativeRole.ManageUserAccountJPanel;
import Business.Stakeholders.SpecimenTypeDirectory;
import Business.Stakeholders.SpecimenTypes;
import com.orsoncharts.plot.PiePlot3D;
import java.util.Locale;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import Business.Stakeholders.studies;
import Business.Enterprise.ClinicalLabEnterprise;
import java.util.ArrayList;
import Business.Stakeholders.Patients;
import Business.Stakeholders.studiesDirectory;


/**
 *
 * @author harish
 */
public class SuperAdminWorkAreaPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Enterprise enterprise;
    int sponsoredCount = 0;
    int unSponsoredCount = 0;
    private ArrayList<String> studyList;
        private ArrayList<Integer> noOfPatients;
      private  studiesDirectory stuDirectory;

    /**
     * Creates new form SuperAdminWorkArea
     */
//    public SuperAdminWorkAreaPanel() {
//        initComponents();
//    }
     private PatientsDirectory patientsDirectory;
    private  SpecimenTypeDirectory specimenTypeDirectory;
     public SuperAdminWorkAreaPanel(JPanel userProcessContainer, Enterprise enterprise,PatientsDirectory patientsDirectory,SpecimenTypeDirectory specimenTypeDirectory,studiesDirectory stuDirectory) {
        initComponents();
        studyList = new ArrayList<String>();
                noOfPatients = new ArrayList<Integer>();
        setBacgroundImage();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        enterpriseNameLabel.setText(enterprise.getName());
//        patientsDirectory = new PatientsDirectory();
//        specimenTypeDirectory = new  SpecimenTypeDirectory();
        this.specimenTypeDirectory = specimenTypeDirectory;
        this.patientsDirectory = patientsDirectory;
//        enterpriseNameLabel.setText(enterprise.);
        this.stuDirectory = stuDirectory;
        calculateTypeOfStudies();
      calculatePatientsPerStudy();
    }
     private void calculateTypeOfStudies(){
        
//      if(this.stuDirectory!=null)
        for(studies study: stuDirectory.getStudyList()){
            if(study.getSponsorship().equals("Sponsered") ){
                sponsoredCount++;
            }else if(study.getSponsorship().equals("UnSponsered")){
                unSponsoredCount++;
            }
            
        }
        
    }
    
    private void calculatePatientsPerStudy(){
        
        for(studies s: stuDirectory.getStudyList()) {
            int counter=0;
            studyList.add(s.getStudyTitle());
            for(Patients p : patientsDirectory.getPatientDirectory()){
                if(s.getIrbID().equals(p.getStudyID())){
                    counter++;
                }
            }
       noOfPatients.add(counter);
    System.out.println(counter);
        }
        
        
        for(String s : studyList){
            System.out.println("Studies "+s);
        }
        for(int i:noOfPatients){
            System.out.println("Patients "+i);

        }
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        enterpriseNameLabel = new javax.swing.JLabel();
        btnManageSite = new javax.swing.JButton();
        btnManageEmp = new javax.swing.JButton();
        btnManageUser = new javax.swing.JButton();
        btnManagePatient = new javax.swing.JButton();
        btnManageSpecimen = new javax.swing.JButton();
        btnPieChart = new javax.swing.JButton();
        btnBarGraph = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jLabel2.setIcon(new javax.swing.ImageIcon("/Users/harish/Desktop/Untitled-1.jpg")); // NOI18N

        setBackground(new java.awt.Color(180, 190, 202));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterpriseNameLabel.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        enterpriseNameLabel.setText("value");
        add(enterpriseNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 30, -1, -1));

        btnManageSite.setBackground(new java.awt.Color(18, 51, 105));
        btnManageSite.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btnManageSite.setForeground(new java.awt.Color(255, 255, 255));
        btnManageSite.setText("Manage Site");
        btnManageSite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageSiteActionPerformed(evt);
            }
        });
        add(btnManageSite, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, 290, 50));

        btnManageEmp.setBackground(new java.awt.Color(18, 51, 105));
        btnManageEmp.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btnManageEmp.setForeground(new java.awt.Color(255, 255, 255));
        btnManageEmp.setText("Manage Employee");
        btnManageEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageEmpActionPerformed(evt);
            }
        });
        add(btnManageEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 180, 290, 50));

        btnManageUser.setBackground(new java.awt.Color(18, 51, 105));
        btnManageUser.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btnManageUser.setForeground(new java.awt.Color(255, 255, 255));
        btnManageUser.setText("Manage User");
        btnManageUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageUserActionPerformed(evt);
            }
        });
        add(btnManageUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, 290, 50));

        btnManagePatient.setBackground(new java.awt.Color(18, 51, 105));
        btnManagePatient.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btnManagePatient.setForeground(new java.awt.Color(255, 255, 255));
        btnManagePatient.setText("Manage Patient");
        btnManagePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManagePatientActionPerformed(evt);
            }
        });
        add(btnManagePatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 400, 290, 50));

        btnManageSpecimen.setBackground(new java.awt.Color(18, 51, 105));
        btnManageSpecimen.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btnManageSpecimen.setForeground(new java.awt.Color(255, 255, 255));
        btnManageSpecimen.setText("Manage Specimen");
        btnManageSpecimen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageSpecimenActionPerformed(evt);
            }
        });
        add(btnManageSpecimen, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 320, 290, 50));

        btnPieChart.setBackground(new java.awt.Color(18, 51, 105));
        btnPieChart.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btnPieChart.setForeground(new java.awt.Color(255, 255, 255));
        btnPieChart.setText("Study Type Report");
        btnPieChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPieChartActionPerformed(evt);
            }
        });
        add(btnPieChart, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 100, 290, 50));

        btnBarGraph.setBackground(new java.awt.Color(18, 51, 105));
        btnBarGraph.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btnBarGraph.setForeground(new java.awt.Color(255, 255, 255));
        btnBarGraph.setText("Patient/Study Report");
        btnBarGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBarGraphActionPerformed(evt);
            }
        });
        add(btnBarGraph, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 170, 290, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bg.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 1000));
    }// </editor-fold>//GEN-END:initComponents

    private void setBacgroundImage(){
        
    }
    
    private void btnManageEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageEmpActionPerformed
  ManageEmployeeJPanel manageEmployeeJPanel = new ManageEmployeeJPanel(userProcessContainer, enterprise.getOrganizationDirectory());
        userProcessContainer.add("manageEmployeeJPanel", manageEmployeeJPanel);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
// TODO add your handling code here:
    }//GEN-LAST:event_btnManageEmpActionPerformed

    private void btnManageSiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageSiteActionPerformed
        // TODO add your handling code here:
         ManageOrganizationJPanel manageOrganizationJPanel = new ManageOrganizationJPanel(userProcessContainer, enterprise.getOrganizationDirectory());
        userProcessContainer.add("manageOrganizationJPanel", manageOrganizationJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnManageSiteActionPerformed

    private void btnManageUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageUserActionPerformed
        // TODO add your handling code here:
          ManageUserAccountJPanel muajp = new ManageUserAccountJPanel(userProcessContainer, enterprise);
        userProcessContainer.add("ManageUserAccountJPanel", muajp);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnManageUserActionPerformed

    private void btnManagePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManagePatientActionPerformed
        // TODO add your handling code here:
        
//           SuperAdminAddPatientPanel muajp = new SuperAdminAddPatientPanel(userProcessContainer, enterprise);
                   SuperAdminManagePatientPanel muajp = new SuperAdminManagePatientPanel(userProcessContainer, enterprise, patientsDirectory);

        
        userProcessContainer.add("SuperAdminManagePatient", muajp);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_btnManagePatientActionPerformed

    private void btnManageSpecimenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageSpecimenActionPerformed
        // TODO add your handling code here:
        
//           SuperAdminAddspecimenPanel muajp = new SuperAdminAddspecimenPanel(userProcessContainer, enterprise);
//        userProcessContainer.add("SuperAdminAddspecimenPanel", muajp);
          SuperAdminManageSpecimenPanel muajp = new SuperAdminManageSpecimenPanel(userProcessContainer, enterprise, specimenTypeDirectory);
        userProcessContainer.add("SuperAdminManageSpecimenPanel", muajp);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_btnManageSpecimenActionPerformed

    private void btnPieChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPieChartActionPerformed
        // TODO add your handling code here:
          
        DefaultPieDataset pieDataSet = new DefaultPieDataset();
        pieDataSet.setValue("Sponsored", new Integer(sponsoredCount));
        pieDataSet.setValue("Unsponsored", new Integer(unSponsoredCount));
//        pieDataSet.setValue("value3", new Integer(10));
//        pieDataSet.setValue("value4", new Integer(10));
        JFreeChart chart =  ChartFactory .createPieChart("Pie Chart", pieDataSet, true, true, true);
        
        PiePlot P = (PiePlot) chart.getPlot();
//                P.setForegroundAlpha(TOP_ALIGNMENT);

        ChartFrame frame = new ChartFrame("CR Management", chart);
        frame.setVisible(true);
        frame.setSize(600, 600);
        
        
    }//GEN-LAST:event_btnPieChartActionPerformed

    private void btnBarGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarGraphActionPerformed
        // TODO add your handling code here:
           
        DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
        
        int i= 0;
           for(String s : studyList){
               
                barChartData.setValue(noOfPatients.get(i),"X", s);
                    i++;

               
        }
        
        JFreeChart barChart = ChartFactory.createBarChart("Patient/Study Analysis", "Study", "Number Of Patients", barChartData, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot P = (CategoryPlot) barChart.getPlot();

        ChartFrame frame = new ChartFrame("CR Management", barChart);
        frame.setVisible(true);
        frame.setSize(400, 600);
        
    }//GEN-LAST:event_btnBarGraphActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBarGraph;
    private javax.swing.JButton btnManageEmp;
    private javax.swing.JButton btnManagePatient;
    private javax.swing.JButton btnManageSite;
    private javax.swing.JButton btnManageSpecimen;
    private javax.swing.JButton btnManageUser;
    private javax.swing.JButton btnPieChart;
    private javax.swing.JLabel enterpriseNameLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
